{"ast":null,"code":"var BitByte = require('./8BitByte');\nvar RSBlock = require('./RSBlock');\nvar BitBuffer = require('./BitBuffer');\nvar util = require('./util');\nvar Polynomial = require('./Polynomial');\nfunction QRCode(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n}\n\n// for client side minification\nvar proto = QRCode.prototype;\nproto.addData = function (data) {\n  var newData = new BitByte(data);\n  this.dataList.push(newData);\n  this.dataCache = null;\n};\nproto.isDark = function (row, col) {\n  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n    throw new Error(row + \",\" + col);\n  }\n  return this.modules[row][col];\n};\nproto.getModuleCount = function () {\n  return this.moduleCount;\n};\nproto.make = function () {\n  // Calculate automatically typeNumber if provided is < 1\n  if (this.typeNumber < 1) {\n    var typeNumber = 1;\n    for (typeNumber = 1; typeNumber < 40; typeNumber++) {\n      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n      var buffer = new BitBuffer();\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n      for (var i = 0; i < this.dataList.length; i++) {\n        var data = this.dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n      }\n      if (buffer.getLengthInBits() <= totalDataCount * 8) break;\n    }\n    this.typeNumber = typeNumber;\n  }\n  this.makeImpl(false, this.getBestMaskPattern());\n};\nproto.makeImpl = function (test, maskPattern) {\n  this.moduleCount = this.typeNumber * 4 + 17;\n  this.modules = new Array(this.moduleCount);\n  for (var row = 0; row < this.moduleCount; row++) {\n    this.modules[row] = new Array(this.moduleCount);\n    for (var col = 0; col < this.moduleCount; col++) {\n      this.modules[row][col] = null; //(col + row) % 3;\n    }\n  }\n  this.setupPositionProbePattern(0, 0);\n  this.setupPositionProbePattern(this.moduleCount - 7, 0);\n  this.setupPositionProbePattern(0, this.moduleCount - 7);\n  this.setupPositionAdjustPattern();\n  this.setupTimingPattern();\n  this.setupTypeInfo(test, maskPattern);\n  if (this.typeNumber >= 7) {\n    this.setupTypeNumber(test);\n  }\n  if (this.dataCache == null) {\n    this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n  }\n  this.mapData(this.dataCache, maskPattern);\n};\nproto.setupPositionProbePattern = function (row, col) {\n  for (var r = -1; r <= 7; r++) {\n    if (row + r <= -1 || this.moduleCount <= row + r) continue;\n    for (var c = -1; c <= 7; c++) {\n      if (col + c <= -1 || this.moduleCount <= col + c) continue;\n      if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n        this.modules[row + r][col + c] = true;\n      } else {\n        this.modules[row + r][col + c] = false;\n      }\n    }\n  }\n};\nproto.getBestMaskPattern = function () {\n  var minLostPoint = 0;\n  var pattern = 0;\n  for (var i = 0; i < 8; i++) {\n    this.makeImpl(true, i);\n    var lostPoint = util.getLostPoint(this);\n    if (i == 0 || minLostPoint > lostPoint) {\n      minLostPoint = lostPoint;\n      pattern = i;\n    }\n  }\n  return pattern;\n};\nproto.createMovieClip = function (target_mc, instance_name, depth) {\n  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n  var cs = 1;\n  this.make();\n  for (var row = 0; row < this.modules.length; row++) {\n    var y = row * cs;\n    for (var col = 0; col < this.modules[row].length; col++) {\n      var x = col * cs;\n      var dark = this.modules[row][col];\n      if (dark) {\n        qr_mc.beginFill(0, 100);\n        qr_mc.moveTo(x, y);\n        qr_mc.lineTo(x + cs, y);\n        qr_mc.lineTo(x + cs, y + cs);\n        qr_mc.lineTo(x, y + cs);\n        qr_mc.endFill();\n      }\n    }\n  }\n  return qr_mc;\n};\nproto.setupTimingPattern = function () {\n  for (var r = 8; r < this.moduleCount - 8; r++) {\n    if (this.modules[r][6] != null) {\n      continue;\n    }\n    this.modules[r][6] = r % 2 == 0;\n  }\n  for (var c = 8; c < this.moduleCount - 8; c++) {\n    if (this.modules[6][c] != null) {\n      continue;\n    }\n    this.modules[6][c] = c % 2 == 0;\n  }\n};\nproto.setupPositionAdjustPattern = function () {\n  var pos = util.getPatternPosition(this.typeNumber);\n  for (var i = 0; i < pos.length; i++) {\n    for (var j = 0; j < pos.length; j++) {\n      var row = pos[i];\n      var col = pos[j];\n      if (this.modules[row][col] != null) {\n        continue;\n      }\n      for (var r = -2; r <= 2; r++) {\n        for (var c = -2; c <= 2; c++) {\n          if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n            this.modules[row + r][col + c] = true;\n          } else {\n            this.modules[row + r][col + c] = false;\n          }\n        }\n      }\n    }\n  }\n};\nproto.setupTypeNumber = function (test) {\n  var bits = util.getBCHTypeNumber(this.typeNumber);\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n  }\n  for (var i = 0; i < 18; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n  }\n};\nproto.setupTypeInfo = function (test, maskPattern) {\n  var data = this.errorCorrectLevel << 3 | maskPattern;\n  var bits = util.getBCHTypeInfo(data);\n\n  // vertical\t\t\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    if (i < 6) {\n      this.modules[i][8] = mod;\n    } else if (i < 8) {\n      this.modules[i + 1][8] = mod;\n    } else {\n      this.modules[this.moduleCount - 15 + i][8] = mod;\n    }\n  }\n\n  // horizontal\n  for (var i = 0; i < 15; i++) {\n    var mod = !test && (bits >> i & 1) == 1;\n    if (i < 8) {\n      this.modules[8][this.moduleCount - i - 1] = mod;\n    } else if (i < 9) {\n      this.modules[8][15 - i - 1 + 1] = mod;\n    } else {\n      this.modules[8][15 - i - 1] = mod;\n    }\n  }\n\n  // fixed module\n  this.modules[this.moduleCount - 8][8] = !test;\n};\nproto.mapData = function (data, maskPattern) {\n  var inc = -1;\n  var row = this.moduleCount - 1;\n  var bitIndex = 7;\n  var byteIndex = 0;\n  for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n    if (col == 6) col--;\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (this.modules[row][col - c] == null) {\n          var dark = false;\n          if (byteIndex < data.length) {\n            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n          }\n          var mask = util.getMask(maskPattern, row, col - c);\n          if (mask) {\n            dark = !dark;\n          }\n          this.modules[row][col - c] = dark;\n          bitIndex--;\n          if (bitIndex == -1) {\n            byteIndex++;\n            bitIndex = 7;\n          }\n        }\n      }\n      row += inc;\n      if (row < 0 || this.moduleCount <= row) {\n        row -= inc;\n        inc = -inc;\n        break;\n      }\n    }\n  }\n};\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new BitBuffer();\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  }\n\n  // calc num max data.\n  var totalDataCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n  }\n\n  // end code\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  }\n\n  // padding\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  }\n\n  // padding\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCode.PAD0, 8);\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCode.PAD1, 8);\n  }\n  return QRCode.createBytes(buffer, rsBlocks);\n};\nQRCode.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n    offset += dcCount;\n    var rsPoly = util.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n    for (var i = 0; i < ecdata[r].length; i++) {\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n  var totalCodeCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n  var data = new Array(totalCodeCount);\n  var index = 0;\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n  return data;\n};\nmodule.exports = QRCode;","map":{"version":3,"names":["BitByte","require","RSBlock","BitBuffer","util","Polynomial","QRCode","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","proto","prototype","addData","data","newData","push","isDark","row","col","Error","getModuleCount","make","rsBlocks","getRSBlocks","buffer","totalDataCount","i","length","dataCount","put","mode","getLength","getLengthInBits","write","makeImpl","getBestMaskPattern","test","maskPattern","Array","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","get","totalCodeCount","index","module","exports"],"sources":["C:/Users/DELL/Documents/GitHub/Software-Project-QRBATS-WebApp/Front-End/node_modules/qr.js/lib/QRCode.js"],"sourcesContent":["var BitByte = require('./8BitByte');\r\nvar RSBlock = require('./RSBlock');\r\nvar BitBuffer = require('./BitBuffer');\r\nvar util = require('./util');\r\nvar Polynomial = require('./Polynomial');\r\n\r\nfunction QRCode(typeNumber, errorCorrectLevel) {\r\n\tthis.typeNumber = typeNumber;\r\n\tthis.errorCorrectLevel = errorCorrectLevel;\r\n\tthis.modules = null;\r\n\tthis.moduleCount = 0;\r\n\tthis.dataCache = null;\r\n\tthis.dataList = [];\r\n}\r\n\r\n// for client side minification\r\nvar proto = QRCode.prototype;\r\n\r\nproto.addData = function(data) {\r\n\tvar newData = new BitByte(data);\r\n\tthis.dataList.push(newData);\r\n\tthis.dataCache = null;\r\n};\r\n\r\nproto.isDark = function(row, col) {\r\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\r\n\t\tthrow new Error(row + \",\" + col);\r\n\t}\r\n\treturn this.modules[row][col];\r\n};\r\n\r\nproto.getModuleCount = function() {\r\n\treturn this.moduleCount;\r\n};\r\n\r\nproto.make = function() {\r\n\t// Calculate automatically typeNumber if provided is < 1\r\n\tif (this.typeNumber < 1 ){\r\n\t\tvar typeNumber = 1;\r\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\r\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\r\n\r\n\t\t\tvar buffer = new BitBuffer();\r\n\t\t\tvar totalDataCount = 0;\r\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\r\n\t\t\t\tvar data = this.dataList[i];\r\n\t\t\t\tbuffer.put(data.mode, 4);\r\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\r\n\t\t\t\tdata.write(buffer);\r\n\t\t\t}\r\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.typeNumber = typeNumber;\r\n\t}\r\n\tthis.makeImpl(false, this.getBestMaskPattern() );\r\n};\r\n\r\nproto.makeImpl = function(test, maskPattern) {\r\n\t\r\n\tthis.moduleCount = this.typeNumber * 4 + 17;\r\n\tthis.modules = new Array(this.moduleCount);\r\n\t\r\n\tfor (var row = 0; row < this.moduleCount; row++) {\r\n\t\t\r\n\t\tthis.modules[row] = new Array(this.moduleCount);\r\n\t\t\r\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\r\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setupPositionProbePattern(0, 0);\r\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\r\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\r\n\tthis.setupPositionAdjustPattern();\r\n\tthis.setupTimingPattern();\r\n\tthis.setupTypeInfo(test, maskPattern);\r\n\t\r\n\tif (this.typeNumber >= 7) {\r\n\t\tthis.setupTypeNumber(test);\r\n\t}\r\n\r\n\tif (this.dataCache == null) {\r\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\r\n\t}\r\n\r\n\tthis.mapData(this.dataCache, maskPattern);\r\n};\r\n\r\nproto.setupPositionProbePattern = function(row, col)  {\r\n\t\r\n\tfor (var r = -1; r <= 7; r++) {\r\n\t\t\r\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\r\n\t\t\r\n\t\tfor (var c = -1; c <= 7; c++) {\r\n\t\t\t\r\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\r\n\t\t\t\r\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\r\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\r\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\r\n\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\t\t\r\n};\r\n\r\nproto.getBestMaskPattern = function() {\r\n\r\n\tvar minLostPoint = 0;\r\n\tvar pattern = 0;\r\n\r\n\tfor (var i = 0; i < 8; i++) {\r\n\t\t\r\n\t\tthis.makeImpl(true, i);\r\n\r\n\t\tvar lostPoint = util.getLostPoint(this);\r\n\r\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\r\n\t\t\tminLostPoint = lostPoint;\r\n\t\t\tpattern = i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn pattern;\r\n};\r\n\r\nproto.createMovieClip = function(target_mc, instance_name, depth) {\r\n\r\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\r\n\tvar cs = 1;\r\n\r\n\tthis.make();\r\n\r\n\tfor (var row = 0; row < this.modules.length; row++) {\r\n\t\t\r\n\t\tvar y = row * cs;\r\n\t\t\r\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\r\n\r\n\t\t\tvar x = col * cs;\r\n\t\t\tvar dark = this.modules[row][col];\r\n\t\t\r\n\t\t\tif (dark) {\r\n\t\t\t\tqr_mc.beginFill(0, 100);\r\n\t\t\t\tqr_mc.moveTo(x, y);\r\n\t\t\t\tqr_mc.lineTo(x + cs, y);\r\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\r\n\t\t\t\tqr_mc.lineTo(x, y + cs);\r\n\t\t\t\tqr_mc.endFill();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn qr_mc;\r\n};\r\n\r\nproto.setupTimingPattern = function() {\r\n\t\r\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\r\n\t\tif (this.modules[r][6] != null) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tthis.modules[r][6] = (r % 2 == 0);\r\n\t}\r\n\r\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\r\n\t\tif (this.modules[6][c] != null) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tthis.modules[6][c] = (c % 2 == 0);\r\n\t}\r\n};\r\n\r\nproto.setupPositionAdjustPattern = function() {\r\n\r\n\tvar pos = util.getPatternPosition(this.typeNumber);\r\n\t\r\n\tfor (var i = 0; i < pos.length; i++) {\r\n\t\r\n\t\tfor (var j = 0; j < pos.length; j++) {\r\n\t\t\r\n\t\t\tvar row = pos[i];\r\n\t\t\tvar col = pos[j];\r\n\t\t\t\r\n\t\t\tif (this.modules[row][col] != null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (var r = -2; r <= 2; r++) {\r\n\t\t\t\r\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\r\n\t\t\t\t\r\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\r\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nproto.setupTypeNumber = function(test) {\r\n\r\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\r\n\r\n\tfor (var i = 0; i < 18; i++) {\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\r\n\t}\r\n\r\n\tfor (var i = 0; i < 18; i++) {\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\r\n\t}\r\n};\r\n\r\nproto.setupTypeInfo = function(test, maskPattern) {\r\n\r\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\r\n\tvar bits = util.getBCHTypeInfo(data);\r\n\r\n\t// vertical\t\t\r\n\tfor (var i = 0; i < 15; i++) {\r\n\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\r\n\t\tif (i < 6) {\r\n\t\t\tthis.modules[i][8] = mod;\r\n\t\t} else if (i < 8) {\r\n\t\t\tthis.modules[i + 1][8] = mod;\r\n\t\t} else {\r\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\r\n\t\t}\r\n\t}\r\n\r\n\t// horizontal\r\n\tfor (var i = 0; i < 15; i++) {\r\n\r\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\r\n\t\t\r\n\t\tif (i < 8) {\r\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\r\n\t\t} else if (i < 9) {\r\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\r\n\t\t} else {\r\n\t\t\tthis.modules[8][15 - i - 1] = mod;\r\n\t\t}\r\n\t}\r\n\r\n\t// fixed module\r\n\tthis.modules[this.moduleCount - 8][8] = (!test);\r\n};\r\n\r\nproto.mapData = function(data, maskPattern) {\r\n\t\r\n\tvar inc = -1;\r\n\tvar row = this.moduleCount - 1;\r\n\tvar bitIndex = 7;\r\n\tvar byteIndex = 0;\r\n\t\r\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\r\n\r\n\t\tif (col == 6) col--;\r\n\r\n\t\twhile (true) {\r\n\r\n\t\t\tfor (var c = 0; c < 2; c++) {\r\n\t\t\t\t\r\n\t\t\t\tif (this.modules[row][col - c] == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dark = false;\r\n\r\n\t\t\t\t\tif (byteIndex < data.length) {\r\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\r\n\r\n\t\t\t\t\tif (mask) {\r\n\t\t\t\t\t\tdark = !dark;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.modules[row][col - c] = dark;\r\n\t\t\t\t\tbitIndex--;\r\n\r\n\t\t\t\t\tif (bitIndex == -1) {\r\n\t\t\t\t\t\tbyteIndex++;\r\n\t\t\t\t\t\tbitIndex = 7;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\trow += inc;\r\n\r\n\t\t\tif (row < 0 || this.moduleCount <= row) {\r\n\t\t\t\trow -= inc;\r\n\t\t\t\tinc = -inc;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nQRCode.PAD0 = 0xEC;\r\nQRCode.PAD1 = 0x11;\r\n\r\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\r\n\t\r\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\r\n\t\r\n\tvar buffer = new BitBuffer();\r\n\t\r\n\tfor (var i = 0; i < dataList.length; i++) {\r\n\t\tvar data = dataList[i];\r\n\t\tbuffer.put(data.mode, 4);\r\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\r\n\t\tdata.write(buffer);\r\n\t}\r\n\r\n\t// calc num max data.\r\n\tvar totalDataCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalDataCount += rsBlocks[i].dataCount;\r\n\t}\r\n\r\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\r\n\t\tthrow new Error(\"code length overflow. (\"\r\n\t\t\t+ buffer.getLengthInBits()\r\n\t\t\t+ \">\"\r\n\t\t\t+  totalDataCount * 8\r\n\t\t\t+ \")\");\r\n\t}\r\n\r\n\t// end code\r\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\r\n\t\tbuffer.put(0, 4);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (buffer.getLengthInBits() % 8 != 0) {\r\n\t\tbuffer.putBit(false);\r\n\t}\r\n\r\n\t// padding\r\n\twhile (true) {\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD0, 8);\r\n\t\t\r\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tbuffer.put(QRCode.PAD1, 8);\r\n\t}\r\n\r\n\treturn QRCode.createBytes(buffer, rsBlocks);\r\n};\r\n\r\nQRCode.createBytes = function(buffer, rsBlocks) {\r\n\r\n\tvar offset = 0;\r\n\t\r\n\tvar maxDcCount = 0;\r\n\tvar maxEcCount = 0;\r\n\t\r\n\tvar dcdata = new Array(rsBlocks.length);\r\n\tvar ecdata = new Array(rsBlocks.length);\r\n\t\r\n\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\r\n\t\tvar dcCount = rsBlocks[r].dataCount;\r\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\r\n\r\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\r\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\r\n\t\t\r\n\t\tdcdata[r] = new Array(dcCount);\r\n\t\t\r\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\r\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\r\n\t\t}\r\n\t\toffset += dcCount;\r\n\t\t\r\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\r\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\r\n\r\n\t\tvar modPoly = rawPoly.mod(rsPoly);\r\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\r\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\r\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\r\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tvar totalCodeCount = 0;\r\n\tfor (var i = 0; i < rsBlocks.length; i++) {\r\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\r\n\t}\r\n\r\n\tvar data = new Array(totalCodeCount);\r\n\tvar index = 0;\r\n\r\n\tfor (var i = 0; i < maxDcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < dcdata[r].length) {\r\n\t\t\t\tdata[index++] = dcdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0; i < maxEcCount; i++) {\r\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\r\n\t\t\tif (i < ecdata[r].length) {\r\n\t\t\t\tdata[index++] = ecdata[r][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\nmodule.exports = QRCode;\r\n\r\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAY,CAAC;AACnC,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAII,UAAU,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAExC,SAASK,MAAMA,CAACC,UAAU,EAAEC,iBAAiB,EAAE;EAC9C,IAAI,CAACD,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACC,OAAO,GAAG,IAAI;EACnB,IAAI,CAACC,WAAW,GAAG,CAAC;EACpB,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,QAAQ,GAAG,EAAE;AACnB;;AAEA;AACA,IAAIC,KAAK,GAAGP,MAAM,CAACQ,SAAS;AAE5BD,KAAK,CAACE,OAAO,GAAG,UAASC,IAAI,EAAE;EAC9B,IAAIC,OAAO,GAAG,IAAIjB,OAAO,CAACgB,IAAI,CAAC;EAC/B,IAAI,CAACJ,QAAQ,CAACM,IAAI,CAACD,OAAO,CAAC;EAC3B,IAAI,CAACN,SAAS,GAAG,IAAI;AACtB,CAAC;AAEDE,KAAK,CAACM,MAAM,GAAG,UAASC,GAAG,EAAEC,GAAG,EAAE;EACjC,IAAID,GAAG,GAAG,CAAC,IAAI,IAAI,CAACV,WAAW,IAAIU,GAAG,IAAIC,GAAG,GAAG,CAAC,IAAI,IAAI,CAACX,WAAW,IAAIW,GAAG,EAAE;IAC7E,MAAM,IAAIC,KAAK,CAACF,GAAG,GAAG,GAAG,GAAGC,GAAG,CAAC;EACjC;EACA,OAAO,IAAI,CAACZ,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,CAAC;AAC9B,CAAC;AAEDR,KAAK,CAACU,cAAc,GAAG,YAAW;EACjC,OAAO,IAAI,CAACb,WAAW;AACxB,CAAC;AAEDG,KAAK,CAACW,IAAI,GAAG,YAAW;EACvB;EACA,IAAI,IAAI,CAACjB,UAAU,GAAG,CAAC,EAAE;IACxB,IAAIA,UAAU,GAAG,CAAC;IAClB,KAAKA,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,EAAE,EAAEA,UAAU,EAAE,EAAE;MACnD,IAAIkB,QAAQ,GAAGvB,OAAO,CAACwB,WAAW,CAACnB,UAAU,EAAE,IAAI,CAACC,iBAAiB,CAAC;MAEtE,IAAImB,MAAM,GAAG,IAAIxB,SAAS,CAAC,CAAC;MAC5B,IAAIyB,cAAc,GAAG,CAAC;MACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QACzCD,cAAc,IAAIH,QAAQ,CAACI,CAAC,CAAC,CAACE,SAAS;MACxC;MAEA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACjB,QAAQ,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAE;QAC9C,IAAIb,IAAI,GAAG,IAAI,CAACJ,QAAQ,CAACiB,CAAC,CAAC;QAC3BF,MAAM,CAACK,GAAG,CAAChB,IAAI,CAACiB,IAAI,EAAE,CAAC,CAAC;QACxBN,MAAM,CAACK,GAAG,CAAChB,IAAI,CAACkB,SAAS,CAAC,CAAC,EAAE9B,IAAI,CAAC+B,eAAe,CAACnB,IAAI,CAACiB,IAAI,EAAE1B,UAAU,CAAE,CAAC;QAC1ES,IAAI,CAACoB,KAAK,CAACT,MAAM,CAAC;MACnB;MACA,IAAIA,MAAM,CAACQ,eAAe,CAAC,CAAC,IAAIP,cAAc,GAAG,CAAC,EACjD;IACF;IACA,IAAI,CAACrB,UAAU,GAAGA,UAAU;EAC7B;EACA,IAAI,CAAC8B,QAAQ,CAAC,KAAK,EAAE,IAAI,CAACC,kBAAkB,CAAC,CAAE,CAAC;AACjD,CAAC;AAEDzB,KAAK,CAACwB,QAAQ,GAAG,UAASE,IAAI,EAAEC,WAAW,EAAE;EAE5C,IAAI,CAAC9B,WAAW,GAAG,IAAI,CAACH,UAAU,GAAG,CAAC,GAAG,EAAE;EAC3C,IAAI,CAACE,OAAO,GAAG,IAAIgC,KAAK,CAAC,IAAI,CAAC/B,WAAW,CAAC;EAE1C,KAAK,IAAIU,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACV,WAAW,EAAEU,GAAG,EAAE,EAAE;IAEhD,IAAI,CAACX,OAAO,CAACW,GAAG,CAAC,GAAG,IAAIqB,KAAK,CAAC,IAAI,CAAC/B,WAAW,CAAC;IAE/C,KAAK,IAAIW,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACX,WAAW,EAAEW,GAAG,EAAE,EAAE;MAChD,IAAI,CAACZ,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,IAAI,CAAC;IAC/B;EACD;EAEA,IAAI,CAACqB,yBAAyB,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,IAAI,CAACA,yBAAyB,CAAC,IAAI,CAAChC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC;EACvD,IAAI,CAACgC,yBAAyB,CAAC,CAAC,EAAE,IAAI,CAAChC,WAAW,GAAG,CAAC,CAAC;EACvD,IAAI,CAACiC,0BAA0B,CAAC,CAAC;EACjC,IAAI,CAACC,kBAAkB,CAAC,CAAC;EACzB,IAAI,CAACC,aAAa,CAACN,IAAI,EAAEC,WAAW,CAAC;EAErC,IAAI,IAAI,CAACjC,UAAU,IAAI,CAAC,EAAE;IACzB,IAAI,CAACuC,eAAe,CAACP,IAAI,CAAC;EAC3B;EAEA,IAAI,IAAI,CAAC5B,SAAS,IAAI,IAAI,EAAE;IAC3B,IAAI,CAACA,SAAS,GAAGL,MAAM,CAACyC,UAAU,CAAC,IAAI,CAACxC,UAAU,EAAE,IAAI,CAACC,iBAAiB,EAAE,IAAI,CAACI,QAAQ,CAAC;EAC3F;EAEA,IAAI,CAACoC,OAAO,CAAC,IAAI,CAACrC,SAAS,EAAE6B,WAAW,CAAC;AAC1C,CAAC;AAED3B,KAAK,CAAC6B,yBAAyB,GAAG,UAAStB,GAAG,EAAEC,GAAG,EAAG;EAErD,KAAK,IAAI4B,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAE7B,IAAI7B,GAAG,GAAG6B,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAACvC,WAAW,IAAIU,GAAG,GAAG6B,CAAC,EAAE;IAElD,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAE7B,IAAI7B,GAAG,GAAG6B,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAACxC,WAAW,IAAIW,GAAG,GAAG6B,CAAC,EAAE;MAElD,IAAM,CAAC,IAAID,CAAC,IAAIA,CAAC,IAAI,CAAC,KAAKC,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,CAAC,IACtC,CAAC,IAAIA,CAAC,IAAIA,CAAC,IAAI,CAAC,KAAKD,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,CAAG,IACxC,CAAC,IAAIA,CAAC,IAAIA,CAAC,IAAI,CAAC,IAAI,CAAC,IAAIC,CAAC,IAAIA,CAAC,IAAI,CAAE,EAAG;QAC7C,IAAI,CAACzC,OAAO,CAACW,GAAG,GAAG6B,CAAC,CAAC,CAAC5B,GAAG,GAAG6B,CAAC,CAAC,GAAG,IAAI;MACtC,CAAC,MAAM;QACN,IAAI,CAACzC,OAAO,CAACW,GAAG,GAAG6B,CAAC,CAAC,CAAC5B,GAAG,GAAG6B,CAAC,CAAC,GAAG,KAAK;MACvC;IACD;EACD;AACD,CAAC;AAEDrC,KAAK,CAACyB,kBAAkB,GAAG,YAAW;EAErC,IAAIa,YAAY,GAAG,CAAC;EACpB,IAAIC,OAAO,GAAG,CAAC;EAEf,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAE3B,IAAI,CAACQ,QAAQ,CAAC,IAAI,EAAER,CAAC,CAAC;IAEtB,IAAIwB,SAAS,GAAGjD,IAAI,CAACkD,YAAY,CAAC,IAAI,CAAC;IAEvC,IAAIzB,CAAC,IAAI,CAAC,IAAIsB,YAAY,GAAIE,SAAS,EAAE;MACxCF,YAAY,GAAGE,SAAS;MACxBD,OAAO,GAAGvB,CAAC;IACZ;EACD;EAEA,OAAOuB,OAAO;AACf,CAAC;AAEDvC,KAAK,CAAC0C,eAAe,GAAG,UAASC,SAAS,EAAEC,aAAa,EAAEC,KAAK,EAAE;EAEjE,IAAIC,KAAK,GAAGH,SAAS,CAACI,oBAAoB,CAACH,aAAa,EAAEC,KAAK,CAAC;EAChE,IAAIG,EAAE,GAAG,CAAC;EAEV,IAAI,CAACrC,IAAI,CAAC,CAAC;EAEX,KAAK,IAAIJ,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACX,OAAO,CAACqB,MAAM,EAAEV,GAAG,EAAE,EAAE;IAEnD,IAAI0C,CAAC,GAAG1C,GAAG,GAAGyC,EAAE;IAEhB,KAAK,IAAIxC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAACZ,OAAO,CAACW,GAAG,CAAC,CAACU,MAAM,EAAET,GAAG,EAAE,EAAE;MAExD,IAAI0C,CAAC,GAAG1C,GAAG,GAAGwC,EAAE;MAChB,IAAIG,IAAI,GAAG,IAAI,CAACvD,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,CAAC;MAEjC,IAAI2C,IAAI,EAAE;QACTL,KAAK,CAACM,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;QACvBN,KAAK,CAACO,MAAM,CAACH,CAAC,EAAED,CAAC,CAAC;QAClBH,KAAK,CAACQ,MAAM,CAACJ,CAAC,GAAGF,EAAE,EAAEC,CAAC,CAAC;QACvBH,KAAK,CAACQ,MAAM,CAACJ,CAAC,GAAGF,EAAE,EAAEC,CAAC,GAAGD,EAAE,CAAC;QAC5BF,KAAK,CAACQ,MAAM,CAACJ,CAAC,EAAED,CAAC,GAAGD,EAAE,CAAC;QACvBF,KAAK,CAACS,OAAO,CAAC,CAAC;MAChB;IACD;EACD;EAEA,OAAOT,KAAK;AACb,CAAC;AAED9C,KAAK,CAAC+B,kBAAkB,GAAG,YAAW;EAErC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvC,WAAW,GAAG,CAAC,EAAEuC,CAAC,EAAE,EAAE;IAC9C,IAAI,IAAI,CAACxC,OAAO,CAACwC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;MAC/B;IACD;IACA,IAAI,CAACxC,OAAO,CAACwC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAIA,CAAC,GAAG,CAAC,IAAI,CAAE;EAClC;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACxC,WAAW,GAAG,CAAC,EAAEwC,CAAC,EAAE,EAAE;IAC9C,IAAI,IAAI,CAACzC,OAAO,CAAC,CAAC,CAAC,CAACyC,CAAC,CAAC,IAAI,IAAI,EAAE;MAC/B;IACD;IACA,IAAI,CAACzC,OAAO,CAAC,CAAC,CAAC,CAACyC,CAAC,CAAC,GAAIA,CAAC,GAAG,CAAC,IAAI,CAAE;EAClC;AACD,CAAC;AAEDrC,KAAK,CAAC8B,0BAA0B,GAAG,YAAW;EAE7C,IAAI0B,GAAG,GAAGjE,IAAI,CAACkE,kBAAkB,CAAC,IAAI,CAAC/D,UAAU,CAAC;EAElD,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwC,GAAG,CAACvC,MAAM,EAAED,CAAC,EAAE,EAAE;IAEpC,KAAK,IAAI0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACvC,MAAM,EAAEyC,CAAC,EAAE,EAAE;MAEpC,IAAInD,GAAG,GAAGiD,GAAG,CAACxC,CAAC,CAAC;MAChB,IAAIR,GAAG,GAAGgD,GAAG,CAACE,CAAC,CAAC;MAEhB,IAAI,IAAI,CAAC9D,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,CAAC,IAAI,IAAI,EAAE;QACnC;MACD;MAEA,KAAK,IAAI4B,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAE7B,IAAID,CAAC,IAAI,CAAC,CAAC,IAAIA,CAAC,IAAI,CAAC,IAAIC,CAAC,IAAI,CAAC,CAAC,IAAIA,CAAC,IAAI,CAAC,IACpCD,CAAC,IAAI,CAAC,IAAIC,CAAC,IAAI,CAAE,EAAG;YACzB,IAAI,CAACzC,OAAO,CAACW,GAAG,GAAG6B,CAAC,CAAC,CAAC5B,GAAG,GAAG6B,CAAC,CAAC,GAAG,IAAI;UACtC,CAAC,MAAM;YACN,IAAI,CAACzC,OAAO,CAACW,GAAG,GAAG6B,CAAC,CAAC,CAAC5B,GAAG,GAAG6B,CAAC,CAAC,GAAG,KAAK;UACvC;QACD;MACD;IACD;EACD;AACD,CAAC;AAEDrC,KAAK,CAACiC,eAAe,GAAG,UAASP,IAAI,EAAE;EAEtC,IAAIiC,IAAI,GAAGpE,IAAI,CAACqE,gBAAgB,CAAC,IAAI,CAAClE,UAAU,CAAC;EAEjD,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5B,IAAI6C,GAAG,GAAI,CAACnC,IAAI,IAAI,CAAGiC,IAAI,IAAI3C,CAAC,GAAI,CAAC,KAAK,CAAE;IAC5C,IAAI,CAACpB,OAAO,CAACkE,IAAI,CAACC,KAAK,CAAC/C,CAAC,GAAG,CAAC,CAAC,CAAC,CAACA,CAAC,GAAG,CAAC,GAAG,IAAI,CAACnB,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGgE,GAAG;EACxE;EAEA,KAAK,IAAI7C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5B,IAAI6C,GAAG,GAAI,CAACnC,IAAI,IAAI,CAAGiC,IAAI,IAAI3C,CAAC,GAAI,CAAC,KAAK,CAAE;IAC5C,IAAI,CAACpB,OAAO,CAACoB,CAAC,GAAG,CAAC,GAAG,IAAI,CAACnB,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAACiE,IAAI,CAACC,KAAK,CAAC/C,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG6C,GAAG;EACxE;AACD,CAAC;AAED7D,KAAK,CAACgC,aAAa,GAAG,UAASN,IAAI,EAAEC,WAAW,EAAE;EAEjD,IAAIxB,IAAI,GAAI,IAAI,CAACR,iBAAiB,IAAI,CAAC,GAAIgC,WAAW;EACtD,IAAIgC,IAAI,GAAGpE,IAAI,CAACyE,cAAc,CAAC7D,IAAI,CAAC;;EAEpC;EACA,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAE5B,IAAI6C,GAAG,GAAI,CAACnC,IAAI,IAAI,CAAGiC,IAAI,IAAI3C,CAAC,GAAI,CAAC,KAAK,CAAE;IAE5C,IAAIA,CAAC,GAAG,CAAC,EAAE;MACV,IAAI,CAACpB,OAAO,CAACoB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG6C,GAAG;IACzB,CAAC,MAAM,IAAI7C,CAAC,GAAG,CAAC,EAAE;MACjB,IAAI,CAACpB,OAAO,CAACoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG6C,GAAG;IAC7B,CAAC,MAAM;MACN,IAAI,CAACjE,OAAO,CAAC,IAAI,CAACC,WAAW,GAAG,EAAE,GAAGmB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG6C,GAAG;IACjD;EACD;;EAEA;EACA,KAAK,IAAI7C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAE5B,IAAI6C,GAAG,GAAI,CAACnC,IAAI,IAAI,CAAGiC,IAAI,IAAI3C,CAAC,GAAI,CAAC,KAAK,CAAE;IAE5C,IAAIA,CAAC,GAAG,CAAC,EAAE;MACV,IAAI,CAACpB,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAACC,WAAW,GAAGmB,CAAC,GAAG,CAAC,CAAC,GAAG6C,GAAG;IAChD,CAAC,MAAM,IAAI7C,CAAC,GAAG,CAAC,EAAE;MACjB,IAAI,CAACpB,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG6C,GAAG;IACtC,CAAC,MAAM;MACN,IAAI,CAACjE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGoB,CAAC,GAAG,CAAC,CAAC,GAAG6C,GAAG;IAClC;EACD;;EAEA;EACA,IAAI,CAACjE,OAAO,CAAC,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAI,CAAC6B,IAAK;AAChD,CAAC;AAED1B,KAAK,CAACmC,OAAO,GAAG,UAAShC,IAAI,EAAEwB,WAAW,EAAE;EAE3C,IAAIsC,GAAG,GAAG,CAAC,CAAC;EACZ,IAAI1D,GAAG,GAAG,IAAI,CAACV,WAAW,GAAG,CAAC;EAC9B,IAAIqE,QAAQ,GAAG,CAAC;EAChB,IAAIC,SAAS,GAAG,CAAC;EAEjB,KAAK,IAAI3D,GAAG,GAAG,IAAI,CAACX,WAAW,GAAG,CAAC,EAAEW,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAI,CAAC,EAAE;IAEvD,IAAIA,GAAG,IAAI,CAAC,EAAEA,GAAG,EAAE;IAEnB,OAAO,IAAI,EAAE;MAEZ,KAAK,IAAI6B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAE3B,IAAI,IAAI,CAACzC,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,GAAG6B,CAAC,CAAC,IAAI,IAAI,EAAE;UAEvC,IAAIc,IAAI,GAAG,KAAK;UAEhB,IAAIgB,SAAS,GAAGhE,IAAI,CAACc,MAAM,EAAE;YAC5BkC,IAAI,GAAK,CAAGhD,IAAI,CAACgE,SAAS,CAAC,KAAKD,QAAQ,GAAI,CAAC,KAAK,CAAE;UACrD;UAEA,IAAIE,IAAI,GAAG7E,IAAI,CAAC8E,OAAO,CAAC1C,WAAW,EAAEpB,GAAG,EAAEC,GAAG,GAAG6B,CAAC,CAAC;UAElD,IAAI+B,IAAI,EAAE;YACTjB,IAAI,GAAG,CAACA,IAAI;UACb;UAEA,IAAI,CAACvD,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,GAAG6B,CAAC,CAAC,GAAGc,IAAI;UACjCe,QAAQ,EAAE;UAEV,IAAIA,QAAQ,IAAI,CAAC,CAAC,EAAE;YACnBC,SAAS,EAAE;YACXD,QAAQ,GAAG,CAAC;UACb;QACD;MACD;MAEA3D,GAAG,IAAI0D,GAAG;MAEV,IAAI1D,GAAG,GAAG,CAAC,IAAI,IAAI,CAACV,WAAW,IAAIU,GAAG,EAAE;QACvCA,GAAG,IAAI0D,GAAG;QACVA,GAAG,GAAG,CAACA,GAAG;QACV;MACD;IACD;EACD;AACD,CAAC;AAEDxE,MAAM,CAAC6E,IAAI,GAAG,IAAI;AAClB7E,MAAM,CAAC8E,IAAI,GAAG,IAAI;AAElB9E,MAAM,CAACyC,UAAU,GAAG,UAASxC,UAAU,EAAEC,iBAAiB,EAAEI,QAAQ,EAAE;EAErE,IAAIa,QAAQ,GAAGvB,OAAO,CAACwB,WAAW,CAACnB,UAAU,EAAEC,iBAAiB,CAAC;EAEjE,IAAImB,MAAM,GAAG,IAAIxB,SAAS,CAAC,CAAC;EAE5B,KAAK,IAAI0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,QAAQ,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAE;IACzC,IAAIb,IAAI,GAAGJ,QAAQ,CAACiB,CAAC,CAAC;IACtBF,MAAM,CAACK,GAAG,CAAChB,IAAI,CAACiB,IAAI,EAAE,CAAC,CAAC;IACxBN,MAAM,CAACK,GAAG,CAAChB,IAAI,CAACkB,SAAS,CAAC,CAAC,EAAE9B,IAAI,CAAC+B,eAAe,CAACnB,IAAI,CAACiB,IAAI,EAAE1B,UAAU,CAAE,CAAC;IAC1ES,IAAI,CAACoB,KAAK,CAACT,MAAM,CAAC;EACnB;;EAEA;EACA,IAAIC,cAAc,GAAG,CAAC;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACzCD,cAAc,IAAIH,QAAQ,CAACI,CAAC,CAAC,CAACE,SAAS;EACxC;EAEA,IAAIJ,MAAM,CAACQ,eAAe,CAAC,CAAC,GAAGP,cAAc,GAAG,CAAC,EAAE;IAClD,MAAM,IAAIN,KAAK,CAAC,yBAAyB,GACtCK,MAAM,CAACQ,eAAe,CAAC,CAAC,GACxB,GAAG,GACFP,cAAc,GAAG,CAAC,GACnB,GAAG,CAAC;EACR;;EAEA;EACA,IAAID,MAAM,CAACQ,eAAe,CAAC,CAAC,GAAG,CAAC,IAAIP,cAAc,GAAG,CAAC,EAAE;IACvDD,MAAM,CAACK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACjB;;EAEA;EACA,OAAOL,MAAM,CAACQ,eAAe,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;IACzCR,MAAM,CAAC0D,MAAM,CAAC,KAAK,CAAC;EACrB;;EAEA;EACA,OAAO,IAAI,EAAE;IAEZ,IAAI1D,MAAM,CAACQ,eAAe,CAAC,CAAC,IAAIP,cAAc,GAAG,CAAC,EAAE;MACnD;IACD;IACAD,MAAM,CAACK,GAAG,CAAC1B,MAAM,CAAC6E,IAAI,EAAE,CAAC,CAAC;IAE1B,IAAIxD,MAAM,CAACQ,eAAe,CAAC,CAAC,IAAIP,cAAc,GAAG,CAAC,EAAE;MACnD;IACD;IACAD,MAAM,CAACK,GAAG,CAAC1B,MAAM,CAAC8E,IAAI,EAAE,CAAC,CAAC;EAC3B;EAEA,OAAO9E,MAAM,CAACgF,WAAW,CAAC3D,MAAM,EAAEF,QAAQ,CAAC;AAC5C,CAAC;AAEDnB,MAAM,CAACgF,WAAW,GAAG,UAAS3D,MAAM,EAAEF,QAAQ,EAAE;EAE/C,IAAI8D,MAAM,GAAG,CAAC;EAEd,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,UAAU,GAAG,CAAC;EAElB,IAAIC,MAAM,GAAG,IAAIjD,KAAK,CAAChB,QAAQ,CAACK,MAAM,CAAC;EACvC,IAAI6D,MAAM,GAAG,IAAIlD,KAAK,CAAChB,QAAQ,CAACK,MAAM,CAAC;EAEvC,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,QAAQ,CAACK,MAAM,EAAEmB,CAAC,EAAE,EAAE;IAEzC,IAAI2C,OAAO,GAAGnE,QAAQ,CAACwB,CAAC,CAAC,CAAClB,SAAS;IACnC,IAAI8D,OAAO,GAAGpE,QAAQ,CAACwB,CAAC,CAAC,CAAC6C,UAAU,GAAGF,OAAO;IAE9CJ,UAAU,GAAGb,IAAI,CAACoB,GAAG,CAACP,UAAU,EAAEI,OAAO,CAAC;IAC1CH,UAAU,GAAGd,IAAI,CAACoB,GAAG,CAACN,UAAU,EAAEI,OAAO,CAAC;IAE1CH,MAAM,CAACzC,CAAC,CAAC,GAAG,IAAIR,KAAK,CAACmD,OAAO,CAAC;IAE9B,KAAK,IAAI/D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6D,MAAM,CAACzC,CAAC,CAAC,CAACnB,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C6D,MAAM,CAACzC,CAAC,CAAC,CAACpB,CAAC,CAAC,GAAG,IAAI,GAAGF,MAAM,CAACA,MAAM,CAACE,CAAC,GAAG0D,MAAM,CAAC;IAChD;IACAA,MAAM,IAAIK,OAAO;IAEjB,IAAII,MAAM,GAAG5F,IAAI,CAAC6F,yBAAyB,CAACJ,OAAO,CAAC;IACpD,IAAIK,OAAO,GAAG,IAAI7F,UAAU,CAACqF,MAAM,CAACzC,CAAC,CAAC,EAAE+C,MAAM,CAAC9D,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IAE/D,IAAIiE,OAAO,GAAGD,OAAO,CAACxB,GAAG,CAACsB,MAAM,CAAC;IACjCL,MAAM,CAAC1C,CAAC,CAAC,GAAG,IAAIR,KAAK,CAACuD,MAAM,CAAC9D,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7C,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8D,MAAM,CAAC1C,CAAC,CAAC,CAACnB,MAAM,EAAED,CAAC,EAAE,EAAE;MACjC,IAAIuE,QAAQ,GAAGvE,CAAC,GAAGsE,OAAO,CAACjE,SAAS,CAAC,CAAC,GAAGyD,MAAM,CAAC1C,CAAC,CAAC,CAACnB,MAAM;MAClE6D,MAAM,CAAC1C,CAAC,CAAC,CAACpB,CAAC,CAAC,GAAIuE,QAAQ,IAAI,CAAC,GAAGD,OAAO,CAACE,GAAG,CAACD,QAAQ,CAAC,GAAG,CAAC;IAC1D;EAED;EAEA,IAAIE,cAAc,GAAG,CAAC;EACtB,KAAK,IAAIzE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACzCyE,cAAc,IAAI7E,QAAQ,CAACI,CAAC,CAAC,CAACiE,UAAU;EACzC;EAEA,IAAI9E,IAAI,GAAG,IAAIyB,KAAK,CAAC6D,cAAc,CAAC;EACpC,IAAIC,KAAK,GAAG,CAAC;EAEb,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2D,UAAU,EAAE3D,CAAC,EAAE,EAAE;IACpC,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,QAAQ,CAACK,MAAM,EAAEmB,CAAC,EAAE,EAAE;MACzC,IAAIpB,CAAC,GAAG6D,MAAM,CAACzC,CAAC,CAAC,CAACnB,MAAM,EAAE;QACzBd,IAAI,CAACuF,KAAK,EAAE,CAAC,GAAGb,MAAM,CAACzC,CAAC,CAAC,CAACpB,CAAC,CAAC;MAC7B;IACD;EACD;EAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4D,UAAU,EAAE5D,CAAC,EAAE,EAAE;IACpC,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,QAAQ,CAACK,MAAM,EAAEmB,CAAC,EAAE,EAAE;MACzC,IAAIpB,CAAC,GAAG8D,MAAM,CAAC1C,CAAC,CAAC,CAACnB,MAAM,EAAE;QACzBd,IAAI,CAACuF,KAAK,EAAE,CAAC,GAAGZ,MAAM,CAAC1C,CAAC,CAAC,CAACpB,CAAC,CAAC;MAC7B;IACD;EACD;EAEA,OAAOb,IAAI;AACZ,CAAC;AAEDwF,MAAM,CAACC,OAAO,GAAGnG,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}